version: "3"

services:

  redis:
    build: ./docker/redis
    env_file: docker/redis/.env
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/data"

  api:
    build:
     context: .
     dockerfile: ./docker/api/Dockerfile
    env_file: docker/api/.env
    ports:
      - "8000:8000"
    depends_on:
      - redis
    volumes:
      - "./app/:/app"
    command: "poetry run hypercorn app.main:app --bind 0.0.0.0:8000 --reload"

  worker:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    env_file: docker/worker/.env
    depends_on:
      - redis
    volumes:
      - "./app/:/app"
    command: "poetry run celery -A app.worker.celery_worker worker -l info"

  beat:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    env_file: docker/worker/.env
    depends_on:
      - redis
    volumes:
      - "./app/:/app"
    command: "poetry run celery -A app.worker.celery_worker beat -l info"
  
  neo4j:
    image: neo4j:4.3
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

volumes:
  redis_data:
    driver: local
  neo4j_data:
